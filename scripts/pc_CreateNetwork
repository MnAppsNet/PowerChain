#!/bin/bash
source tools.sh

PLACEHOLDER_ADMIN="<ADMIN>"
PLACEHOLDER_VALIDATORS="<VALIDATORS>"

NETWORK_FOLDER="./network"
SCRIPTPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "***********************************************************************************************"
echo "This script should only be used once to generate the validator keys and create the genesis file"
echo "            The genesis file can be then passed to peers to join the network"
echo "***********************************************************************************************"
echo "For each validator you will have to define a password for your wallet and a master password for"
echo "the signer. The singer is used to avoid unlocking the wallet and have RPC exposed. You will be "
echo "asked multiple times to enter either your wallet password of the signer password.              "

if [ ! -d "$NETWORK_FOLDER" ]; then
    mkdir "$NETWORK_FOLDER"
fi
echo ""
#Generate bootnode:
echo "***********************"
echo "* Setting up BootNode *"
echo "***********************"
echo ""
echo -n "Host (default localhost): "
host=$(readHost)
bootnode_dir=$NETWORK_FOLDER/bootnode
mkdir "$bootnode_dir"
createBootNode $bootnode_dir $host

#Generate validator addresses:
echo "Number of validators (Default:4): "
read validators
if [ -z "$validators" ]; then
    validators=4
fi

v=0
while [ "$validators" != "$v" ]; do
    clear
    echo "**************************"
    echo "* Setting up validator $v*"
    echo "********************************************************************************************"
    echo "* You will be asked to provide a password for your address and then a master password      *"
    echo "* for an external signer (CLEF). Then you will be asked to associate your address password *"
    echo "* with the external signer so you don't have to unlock your address everytime and have     *"
    echo "* the JSON-RPC API exposed. The signer will validate the RPC calls without unlocking       *"
    echo "* the address in geth.                                                                     *"
    echo "********************************************************************************************"
    echo ""
    echo -n "Host (default localhost): "
    host=$(readHost)
    validator_dir=$NETWORK_FOLDER/validator_$v
    mkdir $validator_dir
    
    geth --datadir "$validator_dir" account new
    for file in "$validator_dir/keystore"/*; do
        filename=$(basename "$file")
        tmp=$IFS
        IFS="-"
        read -ra parts <<< "$filename"
        IFS=$tmp
        address=${parts[-1]}
        if [ -z "$validator_addresses" ]; then
            admin=$address
        fi
        validator_addresses="$validator_addresses$address"
    done
    createStartScript $validator_dir $address $host "X"
    v=$(expr $v + 1)
    echo "Validator $v generated..."
done

#Create genesis file
echo "Generating genesis file..."
cp $SCRIPTPATH/config/genesis.json $NETWORK_FOLDER/genesis.json
admin="0x$admin"
sed -i "s/$PLACEHOLDER_ADMIN/$admin/g" "$NETWORK_FOLDER/genesis.json"
sed -i "s/$PLACEHOLDER_VALIDATORS/$validator_addresses/g" "$NETWORK_FOLDER/genesis.json"
v=0
while [ "$validators" != "$v" ]; do
    validator_dir=$NETWORK_FOLDER/validator_$v
    cp $NETWORK_FOLDER/genesis.json $validator_dir
    cp $NETWORK_FOLDER/bootnodes.txt $validator_dir
    v=$(expr $v + 1)
done

echo "Done..."
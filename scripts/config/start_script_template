#!/bin/bash
SCRIPTPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
GENESIS_FILE="$SCRIPTPATH/genesis.json"
BOOTNODES_FILE="$SCRIPTPATH/bootnodes.txt"
BOOTNODES_FILE_ALT="$SCRIPTPATH/../bootnodes.txt"
DATA_FOLDER="$SCRIPTPATH/data"
SIGNER="$SCRIPTPATH/clef/clef.ipc"
NETWOK_ID="<CHAIN_ID>"
PREDEFINED_PORT="<PREDEFINED_PORT>"
ADDRESS="<ADDRESS>"
HOST="<HOST>"
MINER="<MINER>"

#Signer running
if [ "$MINER" == "X" ]; then
    if [ ! -e $SIGNER ]; then
        echo "Please run the 'startSigner.sh' script first..."
        exit 1
    fi
fi

#Check if genesis file exists
if [ ! -e $GENESIS_FILE ]; then
    echo "No genesis file found, please put the genesis.json file in the same folder as the start script..."
    exit 1
fi

#Get port
if [[ "$PREDEFINED_PORT" == *"PREDEFINED_PORT"* ]]; then
    if [ ! -z "$1" ]; then
        port=$1
    else
        echo "Give a port to use (default = 30305):"
        read port
    fi
    
    if [ -z "$port" ]; then
        P2P_PORT=30301
    else
        P2P_PORT="$port"
    fi
    RPC_PORT=$(($P2P_PORT + 1000))
else
    P2P_PORT=$PREDEFINED_PORT
    RPC_PORT=$(($P2P_PORT + 1000))
fi
HTTP_PORT=$(($RPC_PORT + 1000))
echo "Port set to $P2P_PORT, RPC port set to $RPC_PORT and HTTP port set to $HTTP_PORT"

#Gather bootnodes and join network
bootNodesFile=$BOOTNODES_FILE
if [ ! -e "$bootNodesFile" ]; then
    bootNodesFile=$BOOTNODES_FILE_ALT
fi
if [ -e "$bootNodesFile" ]; then
    echo "Gatherig bootnodes..."
    while IFS= read -r line; do
        echo $line
        if [ -z "$bootNodes" ]; then
             bootNodes=$line
        else
            bootNodes="${bootNodes},$line"
        fi
    done < "$bootNodesFile"
    if [ ! -d "geth" ]; then
        geth --datadir $SCRIPTPATH init $GENESIS_FILE
    fi
    if [ $MINER == "X" ]; then
        geth --datadir $SCRIPTPATH --port $P2P_PORT --bootnodes $bootNodes  --networkid $NETWOK_ID --authrpc.addr $HOST --authrpc.port $RPC_PORT --authrpc.vhosts "*" --signer $SIGNER --mine --miner.etherbase "0x$ADDRESS" --http --http.api eth,net,web3 --http.port $HTTP_PORT --http.addr $HOST --http.corsdomain '*'
    else
        geth --datadir $SCRIPTPATH --port $P2P_PORT --bootnodes $bootNodes  --networkid $NETWOK_ID --authrpc.addr $HOST --authrpc.port $RPC_PORT --authrpc.vhosts "*" --http --http.api eth,net,web3 --http.port $HTTP_PORT --http.addr $HOST --http.corsdomain '*'
    fi
else
    echo "/!\\ Please put at least one boot node in a file '$BOOTNODES_FILE' to be able to discover network peers /!\\"
fi